---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by @casual_degenerate
--- DateTime: 5/20/2020 6:13 PM
---
debug = false --State as true to show stuff in a file called DEBUG.txt to know extra info.
http = require 'socket.http'
require "socket"
--local body = http.request(site)
--Thanks [NekO] I love you. <3 very much homo
function write(FileName, FileContent)
    a = io.open(FileName, "w+")
    a:write(FileContent)
    a:close()
    print("file written")
end
function read(FileName)
    local a = assert(io.open(FileName, "rb"))
    local b = a:read("*all")
    a:close()
    return b;
end
function sleep(sec)
    socket.select(nil, nil, sec)
end
censors = { "18"; "69"; "88"; "r34"; "420"; "455"; "8008"; } --Why the hell am I still up rn.
function censor(a)
    for i,v in pairs(censors) do
        if a == v then
            return true --Something I did fucked this part up. Had to fix it after 10+ minutes of me wondering "WHY THE FUCK IS IT SKIPPING THE CHECK ACC PART WHEN IT'S NOT ON THE CENSOR LIST"!. Turns out that it was the wrong return statements... EDIT: WRONG IT WAS DOING IT'S JUST JUST TURNED OUT MY MATH.RANDOM() CHOSE A NUMBER WITH 69 IN IT! I HATE LIFE SO FUCKING MUCH RN!
        end
        if string.find(a, v) then
            return true
        end
    end
    return false
end
--https://auth.roblox.com/v1/usernames/validate?context=UsernameChange&username=sdsfd69fdg
Check = {
    Account = function(username) if debug then print('run check.account with '..tostring(username)) end
        --The function
        if not censor(username) then if debug then print("past censor") end
            local body = http.request("https://api.roblox.com/users/get-by-username?username=" .. username) --ROBLOX username API jiz
            if body:sub(50) == "" then
                return false --Username does not exist
            else
                return true --Username exist
            end
        end
    end;
    Asset = function(userId,assetId)
        return http.request("https://api.roblox.com/ownership/hasasset?userId="..userId.."&assetId="..assetId)
    end;
    Robux = function()
        local body = http.request("https://api.roblox.com/currency/balance")
        return body
    end;
    Game = function(id) --Does not work.
        local body = http.request("https://games.roblox.com/v1/games/multiget-place-details?placeIds=" .. id)
        return body
    end;
    Outfits = function(id)
        local body = http.request("https://avatar.roblox.com/v1/users/"..id.."/outfits")
        return body
    end;


}
output = ""
--print(Check.Account("CasualDegenerate")) --How to run the function
--Expected output: "true" meaning my username does exist on ROBLOX.
--print(Check.Account("dflskjlkjhafsdks")) --Another example. kek
--Expected output: "false" (from 5/20/20 9:53PM) since no one took the username as of now.
--[[
local ALLTHEFUCKINGLETTERSINSIDEOFATABLE={[1]="a",[2]="b",[3]="c",[4]="d",[5]="e",[6]="f",[7]="g",[8]="h",[9]="i",[10]="j",[11]="k",[12]="l",[13]="m",[14]="n",[15]="o",[16]="p",[17]="q",[18]="r",[19]="s",[20]="t",[21]="u",[22]="v",[23]="w",[24]="x",[25]="y",[26]="z"}
--8
--27
--64
--125
output=""
count=0
for a,_ in pairs(test) do
    for b,_ in pairs(test) do
        for c,_ in pairs(test) do count=count+1
            --for d,_ in pairs(test) do
                --for e,_ in pairs(test) do
                    --for f,_ in pairs(test) do
                        local name = test[a]..test[b]..test[c] --print(name)
                        if Check.Account(name) == false then print('hit')
                            output = (output..name.."\n")
                            print(name)
                        end
                        print(count.."/"..26^3)
                    --end
                --end
            --end
        end
    end
end
print(output)
--]]


--print(Check.Robux())



--print(Check.Game(4816211628))
--[[
for i=1,500 do
    local body = Check.Game(i)
    if body:sub(2) ~= "" then
        print(body)
    end
    print(i.."/".."500")
end
--]]





--[[
TODO: Add a split for the usernames that are saved such as five usernames then split it into another file, but with proper maths so that the files created would be like "guest0-5", "guest5-10" so ye. Something like this will make file corruption(if in a new update causes that) will have backups from the other files and you can start from there, and it's useful if you just want to stop early.

--]]
---[[
min = 100000
max = min + 250
hits = 0
tick = 0
time = 0
clockTime = os.date("%X - %x")
time = os.clock()
times = {}
timeMean = 0
kek = "guest"
bef = os.clock()
for i = min, max do if debug then print("for loop start") end
    name = kek .. i
    pcall(function() if debug then print('pcall start') end
        if Check.Account(name) == false then if debug then print("acc grab") end
            hit = name --If the internet is good I get 4Request/Second so big numbers means fuck you
            output = (output .. name .. "\n")
            hits = hits + 1
        else if debug then print('acc drop') end
            hit = ""
        end if debug then print("pcall inside end") end
    end) if debug then print("pcall outside end") end
    if #times > 25 then times={} end
    table.insert(times, #times + 1, os.clock() - bef)
    bef = os.clock()
    print(i - min .. "/" .. max - min .. "|" .. i .. "/" .. max .. string.format("    Time Elapsed: %.2f", os.clock() - time) .. " Seconds     " .. hit)
    if debug then print('for loop inside end') end
end
write(kek .. min .. "-" .. max .. " Output.txt", "Names Found at the time of: " .. clockTime .. "\n--------------------\n" .. "Scanned " .. max - min .. " Names. Found " .. hits .. ".\n" .. output)
if debug then
    for _,v in pairs(times) do
        timeMean = timeMean + tonumber(v)
    end
    --timeMean = timeMean / #times
    write("DEBUG.txt", "Time per check(Seconds): "..unpack(times))
end

--]]



--local https = require('src.ssl.h')

--print(https)

function friends(userId)
    return http.request("https://friends.roblox.com/v1/users/" .. userId .. "/friends")
end

--print(friends(1090451412))

--[[
hits={}
for i=1,21600 do
    local a = Check.Asset(1,i)
    if a == true then
        table.insert(hits,#hits+1,i)
    end
    print("["..i.."]: "..a)
    sleep(1)
end
a=""
for _,v in pairs(hits) do
    a=a..tostring(v)
end
write("ROBLOX Assets.txt",a)
--]]



--print(Check.Outfits(1090451412))

--print(http.request("https://thumbnails.roblox.com/v1/users/avatar-headshot?userIds=1090451412&size=48x48&format=png"))

unfriend = function(userId)
    return http.request("https://friends.roblox.com/v1/users/"..userId.."/request-friendship")
end
--print(unfriend(56807444))

follow = function(userId)
    return http.request("https://friends.roblox.com/v1/users/"..userId.."/follow")
end

--print(follow(56807444))

ping = function(id)
    return http.request("https://catalog.roblox.com/v1/bundles/"..id.."/details")
end

--print(ping(43))


outfits = function(id)
    return http.request("https://avatar.roblox.com/v1/users/"..id.."/outfits")
end

--print(outfits(1090451412))

